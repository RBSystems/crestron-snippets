/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Programmer:  Jeff McAleer
Comments: Simple module that adds HTML strings to an existing module
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
// #ENABLE_TRACE

#HELP_BEGIN
   This will add the Begin and End strings before and after whatever string is sent to the input.
   Useful for HTML tags
#HELP_END

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
DIGITAL_INPUT _SKIP_,_SKIP_,_SKIP_,_SKIP_,Enable[128];
STRING_INPUT In$[128][254];

STRING_OUTPUT _SKIP_,_SKIP_,_SKIP_,_SKIP_,Out$[128];

/*******************************************************************************************
  Parameters
  (Uncomment and declare parameters as needed)
*******************************************************************************************/
STRING_PARAMETER Disabled_Open_Tag$[254],Disabled_Close_Tag$[254],Enabled_Open_Tag$[254],Enabled_Close_Tag$[254];

/*******************************************************************************************
  Functions
  (Add any additional functions here)
  Note:  Functions must be physically placed before the location in
         the code that calls them.
*******************************************************************************************/
Function fnBuildString(integer nI)
{
	if(len(In$[nI])>0)
	{
		if(Enable[nI]=1) 
		{
			makestring(Out$[nI],"%s%s%s",Enabled_Open_Tag$,In$[nI],Enabled_Close_Tag$);
		}
		else 
		{
			makestring(Out$[nI],"%s%s%s",Disabled_Open_Tag$,In$[nI],Disabled_Close_Tag$);
		}
	}
	else
	{
		Out$[nI]="";
	}
}

/*******************************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
*******************************************************************************************/
change In$
{
	fnBuildString(getlastmodifiedarrayindex());
}

change Enable
{
	fnBuildString(getlastmodifiedarrayindex());
}
